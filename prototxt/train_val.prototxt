layer {
  name: "data"
  type: "ImageFloatData"
  top: "data"
  top: "landmark"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.0078125
    mean_value: 127.5
    # Random scale and shift
    pad_ratio: 0.15
  }
  image_data_param {
    source: "/home/yc/workplace/deeplearning/face/Face-alignment-mobilenet-v2/gen_data/train.txt"
    batch_size: 64
    new_height: 64
    new_width: 64
    shuffle: true
    root_folder: "/home/yc/workplace/deeplearning/face/Face-alignment-mobilenet-v2/gen_data/"
  }
  image_float_data_param {
    label_dim: 196
  }
}
layer {
  name: "data"
  type: "ImageFloatData"
  top: "data"
  top: "landmark"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.0078125
    mean_value: 127.5
  }
  image_data_param {
    source: "/home/yc/workplace/deeplearning/face/Face-alignment-mobilenet-v2/gen_data/test.txt"
    batch_size: 64
	new_height: 64
    new_width: 64
    shuffle: true
    root_folder: "/home/yc/workplace/deeplearning/face/Face-alignment-mobilenet-v2/gen_data/"
  }
  image_float_data_param {
    label_dim: 196
  }
}

layer {
  name: "data"
  type: "Noise"
  bottom: "data"
  top: "data"
  noise_param {
    gaussian_std: 0.001
    bias: 0
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "BatchNorm1"
  type: "BatchNorm"
  bottom: "conv1"
  top: "conv1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale1"
  type: "Scale"
  bottom: "conv1"
  top: "conv1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
  relu_param {
    negative_slope: 0.01
  }
}
layer {
  name: "Convolution1"
  type: "Convolution"
  bottom: "conv1"
  top: "Convolution1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 96
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm2"
  type: "BatchNorm"
  bottom: "Convolution1"
  top: "Convolution1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale2"
  type: "Scale"
  bottom: "Convolution1"
  top: "Convolution1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU1"
  type: "ReLU"
  bottom: "Convolution1"
  top: "Convolution1"
  relu_param {
    negative_slope: 0.01
  }
}
layer {
  name: "ConvolutionDepthwise1"
  type: "ConvolutionDepthwise"
  bottom: "Convolution1"
  top: "ConvolutionDepthwise1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 96
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm3"
  type: "BatchNorm"
  bottom: "ConvolutionDepthwise1"
  top: "ConvolutionDepthwise1"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale3"
  type: "Scale"
  bottom: "ConvolutionDepthwise1"
  top: "ConvolutionDepthwise1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU2"
  type: "ReLU"
  bottom: "ConvolutionDepthwise1"
  top: "ConvolutionDepthwise1"
  relu_param {
    negative_slope: 0.01
  }
}
layer {
  name: "Convolution2"
  type: "Convolution"
  bottom: "ConvolutionDepthwise1"
  top: "Convolution2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 24
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm4"
  type: "BatchNorm"
  bottom: "Convolution2"
  top: "Convolution2"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "fuse2"
  type: "Scale"
  bottom: "Convolution2"
  top: "Convolution2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "Convolution3"
  type: "Convolution"
  bottom: "Convolution2"
  top: "Convolution3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 144
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm5"
  type: "BatchNorm"
  bottom: "Convolution3"
  top: "Convolution3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale4"
  type: "Scale"
  bottom: "Convolution3"
  top: "Convolution3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU3"
  type: "ReLU"
  bottom: "Convolution3"
  top: "Convolution3"
  relu_param {
    negative_slope: 0.01
  }
}
layer {
  name: "ConvolutionDepthwise2"
  type: "ConvolutionDepthwise"
  bottom: "Convolution3"
  top: "ConvolutionDepthwise2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 144
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm6"
  type: "BatchNorm"
  bottom: "ConvolutionDepthwise2"
  top: "ConvolutionDepthwise2"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale5"
  type: "Scale"
  bottom: "ConvolutionDepthwise2"
  top: "ConvolutionDepthwise2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU4"
  type: "ReLU"
  bottom: "ConvolutionDepthwise2"
  top: "ConvolutionDepthwise2"
  relu_param {
    negative_slope: 0.01
  }
}
layer {
  name: "Convolution4"
  type: "Convolution"
  bottom: "ConvolutionDepthwise2"
  top: "Convolution4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 24
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm7"
  type: "BatchNorm"
  bottom: "Convolution4"
  top: "Convolution4"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale6"
  type: "Scale"
  bottom: "Convolution4"
  top: "Convolution4"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "fuse3"
  type: "Eltwise"
  bottom: "Convolution2"
  bottom: "Convolution4"
  top: "fuse3"
}
layer {
  name: "Convolution5"
  type: "Convolution"
  bottom: "fuse3"
  top: "Convolution5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 144
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm8"
  type: "BatchNorm"
  bottom: "Convolution5"
  top: "Convolution5"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale7"
  type: "Scale"
  bottom: "Convolution5"
  top: "Convolution5"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU5"
  type: "ReLU"
  bottom: "Convolution5"
  top: "Convolution5"
  relu_param {
    negative_slope: 0.01
  }
}
layer {
  name: "ConvolutionDepthwise3"
  type: "ConvolutionDepthwise"
  bottom: "Convolution5"
  top: "ConvolutionDepthwise3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 144
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm9"
  type: "BatchNorm"
  bottom: "ConvolutionDepthwise3"
  top: "ConvolutionDepthwise3"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale8"
  type: "Scale"
  bottom: "ConvolutionDepthwise3"
  top: "ConvolutionDepthwise3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU6"
  type: "ReLU"
  bottom: "ConvolutionDepthwise3"
  top: "ConvolutionDepthwise3"
  relu_param {
    negative_slope: 0.01
  }
}
layer {
  name: "Convolution6"
  type: "Convolution"
  bottom: "ConvolutionDepthwise3"
  top: "Convolution6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 32
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm10"
  type: "BatchNorm"
  bottom: "Convolution6"
  top: "Convolution6"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "fuse4"
  type: "Scale"
  bottom: "Convolution6"
  top: "Convolution6"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "Convolution7"
  type: "Convolution"
  bottom: "Convolution6"
  top: "Convolution7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 192
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm11"
  type: "BatchNorm"
  bottom: "Convolution7"
  top: "Convolution7"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale9"
  type: "Scale"
  bottom: "Convolution7"
  top: "Convolution7"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU7"
  type: "ReLU"
  bottom: "Convolution7"
  top: "Convolution7"
  relu_param {
    negative_slope: 0.01
  }
}
layer {
  name: "ConvolutionDepthwise4"
  type: "ConvolutionDepthwise"
  bottom: "Convolution7"
  top: "ConvolutionDepthwise4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 192
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm12"
  type: "BatchNorm"
  bottom: "ConvolutionDepthwise4"
  top: "ConvolutionDepthwise4"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale10"
  type: "Scale"
  bottom: "ConvolutionDepthwise4"
  top: "ConvolutionDepthwise4"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU8"
  type: "ReLU"
  bottom: "ConvolutionDepthwise4"
  top: "ConvolutionDepthwise4"
  relu_param {
    negative_slope: 0.01
  }
}
layer {
  name: "Convolution8"
  type: "Convolution"
  bottom: "ConvolutionDepthwise4"
  top: "Convolution8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 32
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm13"
  type: "BatchNorm"
  bottom: "Convolution8"
  top: "Convolution8"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale11"
  type: "Scale"
  bottom: "Convolution8"
  top: "Convolution8"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "fuse5"
  type: "Eltwise"
  bottom: "Convolution6"
  bottom: "Convolution8"
  top: "fuse5"
}
layer {
  name: "Convolution9"
  type: "Convolution"
  bottom: "fuse5"
  top: "Convolution9"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 192
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm14"
  type: "BatchNorm"
  bottom: "Convolution9"
  top: "Convolution9"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale12"
  type: "Scale"
  bottom: "Convolution9"
  top: "Convolution9"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU9"
  type: "ReLU"
  bottom: "Convolution9"
  top: "Convolution9"
  relu_param {
    negative_slope: 0.01
  }
}
layer {
  name: "ConvolutionDepthwise5"
  type: "ConvolutionDepthwise"
  bottom: "Convolution9"
  top: "ConvolutionDepthwise5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 192
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm15"
  type: "BatchNorm"
  bottom: "ConvolutionDepthwise5"
  top: "ConvolutionDepthwise5"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale13"
  type: "Scale"
  bottom: "ConvolutionDepthwise5"
  top: "ConvolutionDepthwise5"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU10"
  type: "ReLU"
  bottom: "ConvolutionDepthwise5"
  top: "ConvolutionDepthwise5"
  relu_param {
    negative_slope: 0.01
  }
}
layer {
  name: "Convolution10"
  type: "Convolution"
  bottom: "ConvolutionDepthwise5"
  top: "Convolution10"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm16"
  type: "BatchNorm"
  bottom: "Convolution10"
  top: "Convolution10"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "fuse6"
  type: "Scale"
  bottom: "Convolution10"
  top: "Convolution10"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "Convolution11"
  type: "Convolution"
  bottom: "Convolution10"
  top: "Convolution11"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 192
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm17"
  type: "BatchNorm"
  bottom: "Convolution11"
  top: "Convolution11"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale14"
  type: "Scale"
  bottom: "Convolution11"
  top: "Convolution11"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU11"
  type: "ReLU"
  bottom: "Convolution11"
  top: "Convolution11"
  relu_param {
    negative_slope: 0.01
  }
}
layer {
  name: "ConvolutionDepthwise6"
  type: "ConvolutionDepthwise"
  bottom: "Convolution11"
  top: "ConvolutionDepthwise6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 192
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm18"
  type: "BatchNorm"
  bottom: "ConvolutionDepthwise6"
  top: "ConvolutionDepthwise6"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale15"
  type: "Scale"
  bottom: "ConvolutionDepthwise6"
  top: "ConvolutionDepthwise6"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU12"
  type: "ReLU"
  bottom: "ConvolutionDepthwise6"
  top: "ConvolutionDepthwise6"
  relu_param {
    negative_slope: 0.01
  }
}
layer {
  name: "Convolution12"
  type: "Convolution"
  bottom: "ConvolutionDepthwise6"
  top: "Convolution12"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "BatchNorm19"
  type: "BatchNorm"
  bottom: "Convolution12"
  top: "Convolution12"
  batch_norm_param {
    use_global_stats: false
  }
}
layer {
  name: "Scale16"
  type: "Scale"
  bottom: "Convolution12"
  top: "Convolution12"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "fuse7"
  type: "Eltwise"
  bottom: "Convolution10"
  bottom: "Convolution12"
  top: "fuse7"
}
layer {
  name: "fc1"
  type: "InnerProduct"
  bottom: "fuse7"
  top: "fc1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 200
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "fc1_relu"
  type: "ReLU"
  bottom: "fc1"
  top: "fc1"
  relu_param {
    negative_slope: 0.01
  }
}
layer {
  name: "fc2"
  type: "InnerProduct"
  bottom: "fc1"
  top: "fc2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 200
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "fc2_relu"
  type: "ReLU"
  bottom: "fc2"
  top: "fc2"
  relu_param {
    negative_slope: 0.01
  }
}
layer {
  name: "fc3"
  type: "InnerProduct"
  bottom: "fc2"
  top: "fc3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "fc4"
  type: "InnerProduct"
  bottom: "fc3"
  top: "fc4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 196
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

#layer {
#    name: "landmarkloss"
#    type: "EuclideanLoss"
#    bottom: "fc4"
#    bottom: "landmark"
#    top: "landmarkloss"
#    include {
#        phase: TRAIN
#    }
#}

layer {
  name: "landmarkloss"
  type: "WeightEuclideanLoss"
  bottom: "fc4"
  bottom: "landmark"
  top: "landmarkloss"
  loss_weight: 1
  include {
    phase: TRAIN
  }
  weight_euclidean_loss_param {
    contour_weight: 1
    main_weight: 1
    coarse_weight: 1
    normalized: 1
  }
}
